[
   {
      "path": "null",
      "children": [
         {
            "path": "Object",
            "children": [
               {
                  "path": "Array",
                  "children": []
               },
               {
                  "path": "ArrayBuffer",
                  "children": []
               },
               {
                  "path": "BigInt",
                  "children": []
               },
               {
                  "path": "Boolean",
                  "children": []
               },
               {
                  "path": "DataView",
                  "children": []
               },
               {
                  "path": "Date",
                  "children": []
               },
               {
                  "path": "Error",
                  "children": [
                     {
                        "path": "EvalError",
                        "children": []
                     },
                     {
                        "path": "RangeError",
                        "children": []
                     },
                     {
                        "path": "ReferenceError",
                        "children": []
                     },
                     {
                        "path": "SyntaxError",
                        "children": [
                           {
                              "path": "repl::Recoverable",
                              "children": []
                           }
                        ]
                     },
                     {
                        "path": "TypeError",
                        "children": []
                     },
                     {
                        "path": "URIError",
                        "children": []
                     },
                     {
                        "path": "WebAssembly.CompileError",
                        "children": []
                     },
                     {
                        "path": "WebAssembly.LinkError",
                        "children": []
                     },
                     {
                        "path": "WebAssembly.RuntimeError",
                        "children": []
                     },
                     {
                        "path": "assert::AssertionError",
                        "children": []
                     }
                  ]
               },
               {
                  "path": "Function",
                  "children": []
               },
               {
                  "path": "Intl.Collator",
                  "children": []
               },
               {
                  "path": "Intl.DateTimeFormat",
                  "children": []
               },
               {
                  "path": "Intl.ListFormat",
                  "children": []
               },
               {
                  "path": "Intl.Locale",
                  "children": []
               },
               {
                  "path": "Intl.NumberFormat",
                  "children": []
               },
               {
                  "path": "Intl.PluralRules",
                  "children": []
               },
               {
                  "path": "Intl.RelativeTimeFormat",
                  "children": []
               },
               {
                  "path": "Map",
                  "children": []
               },
               {
                  "path": "Number",
                  "children": []
               },
               {
                  "path": "Promise",
                  "children": []
               },
               {
                  "path": "RegExp",
                  "children": []
               },
               {
                  "path": "Set",
                  "children": []
               },
               {
                  "path": "SharedArrayBuffer",
                  "children": []
               },
               {
                  "path": "String",
                  "children": []
               },
               {
                  "path": "Symbol",
                  "children": []
               },
               {
                  "path": "TypedArray",
                  "children": [
                     {
                        "path": "BigInt64Array",
                        "children": []
                     },
                     {
                        "path": "BigUint64Array",
                        "children": []
                     },
                     {
                        "path": "Float32Array",
                        "children": []
                     },
                     {
                        "path": "Float64Array",
                        "children": []
                     },
                     {
                        "path": "Int16Array",
                        "children": []
                     },
                     {
                        "path": "Int32Array",
                        "children": []
                     },
                     {
                        "path": "Int8Array",
                        "children": []
                     },
                     {
                        "path": "Uint16Array",
                        "children": []
                     },
                     {
                        "path": "Uint32Array",
                        "children": []
                     },
                     {
                        "path": "Uint8Array",
                        "children": [
                           {
                              "path": "buffer::Buffer",
                              "children": []
                           },
                           {
                              "path": "buffer::SlowBuffer",
                              "children": []
                           }
                        ]
                     },
                     {
                        "path": "Uint8ClampedArray",
                        "children": []
                     }
                  ]
               },
               {
                  "path": "WeakMap",
                  "children": []
               },
               {
                  "path": "WeakSet",
                  "children": []
               },
               {
                  "path": "WebAssembly.Global",
                  "children": []
               },
               {
                  "path": "WebAssembly.Instance",
                  "children": []
               },
               {
                  "path": "WebAssembly.Memory",
                  "children": []
               },
               {
                  "path": "WebAssembly.Module",
                  "children": []
               },
               {
                  "path": "WebAssembly.Table",
                  "children": []
               },
               {
                  "path": "async_hooks::AsyncResource",
                  "children": [
                     {
                        "path": "perf_hooks::PerformanceObserver",
                        "children": []
                     }
                  ]
               },
               {
                  "path": "crypto::Certificate",
                  "children": []
               },
               {
                  "path": "crypto::DiffieHellman",
                  "children": []
               },
               {
                  "path": "crypto::DiffieHellmanGroup",
                  "children": []
               },
               {
                  "path": "crypto::ECDH",
                  "children": []
               },
               {
                  "path": "crypto::KeyObject",
                  "children": []
               },
               {
                  "path": "dns::Resolver",
                  "children": []
               },
               {
                  "path": "events::EventEmitter",
                  "children": [
                     {
                        "path": "child_process::ChildProcess",
                        "children": []
                     },
                     {
                        "path": "cluster::Worker",
                        "children": []
                     },
                     {
                        "path": "dgram::Socket",
                        "children": []
                     },
                     {
                        "path": "domain::Domain",
                        "children": []
                     },
                     {
                        "path": "https::Agent",
                        "children": [
                           {
                              "path": "https::Agent",
                              "children": []
                           }
                        ]
                     },
                     {
                        "path": "inspector::Session",
                        "children": []
                     },
                     {
                        "path": "readline::Interface",
                        "children": [
                           {
                              "path": "repl::REPLServer",
                              "children": []
                           }
                        ]
                     },
                     {
                        "path": "stream::Stream",
                        "children": [
                           {
                              "path": "http2::Http2ServerResponse",
                              "children": []
                           },
                           {
                              "path": "http::OutgoingMessage",
                              "children": [
                                 {
                                    "path": "http::ClientRequest",
                                    "children": []
                                 },
                                 {
                                    "path": "http::ServerResponse",
                                    "children": []
                                 }
                              ]
                           },
                           {
                              "path": "stream::Readable",
                              "children": [
                                 {
                                    "path": "fs::ReadStream",
                                    "children": []
                                 },
                                 {
                                    "path": "http2::Http2ServerRequest",
                                    "children": []
                                 },
                                 {
                                    "path": "http::IncomingMessage",
                                    "children": []
                                 },
                                 {
                                    "path": "stream::Duplex",
                                    "children": [
                                       {
                                          "path": "net::Socket",
                                          "children": [
                                             {
                                                "path": "tls::TLSSocket",
                                                "children": []
                                             },
                                             {
                                                "path": "tty::ReadStream",
                                                "children": []
                                             },
                                             {
                                                "path": "tty::WriteStream",
                                                "children": []
                                             }
                                          ]
                                       },
                                       {
                                          "path": "stream::Transform",
                                          "children": [
                                             {
                                                "path": "crypto::LazyTransform",
                                                "children": [
                                                   {
                                                      "path": "crypto::Cipher",
                                                      "children": []
                                                   },
                                                   {
                                                      "path": "crypto::Cipheriv",
                                                      "children": []
                                                   },
                                                   {
                                                      "path": "crypto::Decipher",
                                                      "children": []
                                                   },
                                                   {
                                                      "path": "crypto::Decipheriv",
                                                      "children": []
                                                   },
                                                   {
                                                      "path": "crypto::Hash",
                                                      "children": []
                                                   },
                                                   {
                                                      "path": "crypto::Hmac",
                                                      "children": []
                                                   }
                                                ]
                                             },
                                             {
                                                "path": "stream::PassThrough",
                                                "children": []
                                             },
                                             {
                                                "path": "zlib::ZlibBase",
                                                "children": [
                                                   {
                                                      "path": "zlib::Zlib",
                                                      "children": [
                                                         {
                                                            "path": "zlib::Brotli",
                                                            "children": [
                                                               {
                                                                  "path": "zlib::BrotliCompress",
                                                                  "children": []
                                                               },
                                                               {
                                                                  "path": "zlib::BrotliDecompress",
                                                                  "children": []
                                                               }
                                                            ]
                                                         },
                                                         {
                                                            "path": "zlib::Deflate",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::DeflateRaw",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::Gunzip",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::Gzip",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::Inflate",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::InflateRaw",
                                                            "children": []
                                                         },
                                                         {
                                                            "path": "zlib::Unzip",
                                                            "children": []
                                                         }
                                                      ]
                                                   }
                                                ]
                                             }
                                          ]
                                       }
                                    ]
                                 }
                              ]
                           },
                           {
                              "path": "stream::Writable",
                              "children": [
                                 {
                                    "path": "crypto::Sign",
                                    "children": []
                                 },
                                 {
                                    "path": "crypto::Verify",
                                    "children": []
                                 },
                                 {
                                    "path": "fs::WriteStream",
                                    "children": []
                                 }
                              ]
                           }
                        ]
                     },
                     {
                        "path": "tls::Server",
                        "children": [
                           {
                              "path": "http::Server",
                              "children": []
                           },
                           {
                              "path": "tls::Server",
                              "children": [
                                 {
                                    "path": "https::Server",
                                    "children": []
                                 }
                              ]
                           }
                        ]
                     },
                     {
                        "path": "worker_threads::MessagePort",
                        "children": []
                     },
                     {
                        "path": "worker_threads::Worker",
                        "children": []
                     }
                  ]
               },
               {
                  "path": "fs::Dirent",
                  "children": []
               },
               {
                  "path": "fs::Stats",
                  "children": []
               },
               {
                  "path": "module::Module",
                  "children": []
               },
               {
                  "path": "string_decoder::StringDecoder",
                  "children": []
               },
               {
                  "path": "sys::TextDecoder",
                  "children": []
               },
               {
                  "path": "sys::TextEncoder",
                  "children": []
               },
               {
                  "path": "url::URL",
                  "children": []
               },
               {
                  "path": "url::URLSearchParams",
                  "children": []
               },
               {
                  "path": "url::Url",
                  "children": []
               },
               {
                  "path": "v8::Deserializer",
                  "children": [
                     {
                        "path": "v8::Deserializer",
                        "children": [
                           {
                              "path": "v8::DefaultDeserializer",
                              "children": []
                           }
                        ]
                     }
                  ]
               },
               {
                  "path": "v8::Serializer",
                  "children": [
                     {
                        "path": "v8::Serializer",
                        "children": [
                           {
                              "path": "v8::DefaultSerializer",
                              "children": []
                           }
                        ]
                     }
                  ]
               },
               {
                  "path": "vm::ContextifyScript",
                  "children": [
                     {
                        "path": "vm::Script",
                        "children": []
                     }
                  ]
               },
               {
                  "path": "worker_threads::MessageChannel",
                  "children": []
               }
            ]
         }
      ]
   },
   {
      "path": "Proxy",
      "children": []
   }
]